<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="miss">
	<select id="seq" resultType="Integer">
		SELECT comMiss_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertMiss" parameterType="com.sp.catdog.community.miss.Miss">
		INSERT INTO comMiss(missNum, missSubject, missCreated, missWhere, missWhen, missContent,
			missPet, missHitCount, userId, state, missWhereLat, missWhereLng) VALUES (
				#{missNum}, #{missSubject}, SYSDATE, #{missWhere}, #{missWhen}, #{missContent},
				#{missPet}, 0, #{userId}, #{state}, #{missWhereLat}, #{missWhereLng})
	</insert>
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(freeSubject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(missContent, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'where'">
			    DBMS_LOB.INSTR(missWhere, #{keyword}) &gt; 0
			</when>
			<when test="condition == 'subject'">
			    DBMS_LOB.INSTR(missSubject, #{keyword}) &gt; 0
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(missContent, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<insert id="insertMissPet" parameterType="com.sp.catdog.community.miss.Miss">
		INSERT INTO comMissPet(missNum, petBreed, petName, petAge, petGender, petCharacter, petImg) VALUES (
			#{missNum}, #{petBreed}, #{petName}, #{petAge}, #{petGender}, #{petCharacter}, #{petImg} )
	</insert>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM comMiss s
		JOIN member1 m ON m.userId=s.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where> 
	</select>
	
	<select id="listMiss" parameterType="map" resultType="com.sp.catdog.community.miss.Miss">
		SELECT s.missNum, missSubject, to_char(missCreated, 'YYYY-MM-DD') missCreated,
			missHitCount, missWhere, to_char(missWhen, 'YYYY-MM-DD') missWhen, missPet, 
			petName, petAge, petGender, petImg, replyCount
		FROM comMiss s
		LEFT OUTER JOIN (
			SELECT missNum, COUNT(*) replyCount FROM comMissReply
			WHERE missReplyType=0
			GROUP BY missNum
		) c ON s.missNum=c.missNum
		LEFT OUTER JOIN (
			SELECT missNum, petName, petAge, petGender, petImg
			FROM comMissPet
		) n ON s.missNum=n.missNum
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where> 
		ORDER BY missNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE comMiss SET missHitCount=missHitCount+1 WHERE missNum=#{missNum}
	</update>
	
	<select id="readMiss" parameterType="Integer" resultType="com.sp.catdog.community.miss.Miss">
		SELECT s.missNum, s.userId, userNick, missSubject, missContent, to_char(missCreated, 'YYYY-MM-DD') missCreated,
			missHitCount, missWhere, to_char(missWhen, 'YYYY-MM-DD') missWhen, state, missWhereLat, missWhereLng,
			petBreed, petName, petAge, petGender, petCharacter, petImg
		FROM comMiss s
		JOIN member1 m ON s.userId=m.userId
		LEFT OUTER JOIN (
			SELECT missNum, petBreed, petName, petAge, petGender, petImg, petCharacter
			FROM comMissPet
		) n ON s.missNum=n.missNum
		WHERE s.missNum=#{missNum}
	</select>
	
	<select id="preReadMiss" parameterType="map" resultType="com.sp.catdog.community.miss.Miss">
		SELECT missNum, p.userId, missSubject
		FROM comMiss p
		JOIN member1 m ON p.userId=m.userId
		WHERE (missNum &gt; #{missNum})
		ORDER BY missNum ASC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<select id="nextReadMiss" parameterType="map" resultType="com.sp.catdog.community.miss.Miss">
		SELECT missNum, p.userId, missSubject
		FROM comMiss p
		JOIN member1 m ON p.userId=m.userId
		WHERE (missNum &lt; #{missNum})
		ORDER BY missNum DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<delete id="deleteMiss" parameterType="Integer">
		DELETE FROM comMiss WHERE missNum=#{missNum}
	</delete>
	
	<delete id="deleteMissPet" parameterType="Integer">
		DELETE FROM comMissPet WHERE missNum=#{missNum}
	</delete>
	
	<update id="updateMiss"	parameterType="com.sp.catdog.community.miss.Miss">
		UPDATE comMiss SET missSubject=#{missSubject}, missContent=#{missContent}, missWhere=#{missWhere},
			missWhen=#{missWhen}, missWhereLat=#{missWhereLat}, missWhereLng=#{missWhereLng}, missPet=#{missPet}
		WHERE missNum=#{missNum}
	</update>
	
	<update id="updateMissPet" parameterType="com.sp.catdog.community.miss.Miss">
		UPDATE comMissPet SET petBreed=#{petBreed}, petName=#{petName}, petAge=#{petAge},
			petGender=#{petGender}, petCharacter=#{petCharacter}, petImg=#{petImg}
		WHERE missNum=#{missNum}
	</update>
	
	<insert id="insertReply" parameterType="com.sp.catdog.community.miss.Reply">
		INSERT INTO comMissReply(missReplyNum, missReplyContent, missReplyCreated, missReplyType,
			missNum, userId) VALUES (commissreply_seq.NEXTVAL, #{missReplyContent}, SYSDATE, #{missReplyType}, #{missNum}, #{userId})
	</insert>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM comMissReply
		WHERE missNum=#{missNum} AND missReplyType=0
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.sp.catdog.community.miss.Reply">
		SELECT r.missReplyNum, r.userId, userNick, missNum, missReplyContent, 
			to_char(missReplyCreated, 'YYYY-MM-DD') missReplyCreated, answerCount, replyLikeCount
		FROM comMissReply r
		JOIN member1 m ON m.userId=r.userId
		LEFT OUTER JOIN (
			SELECT missReplyType, COUNT(*) answerCount FROM comMissReply
            where missReplyType!=0
            Group by missReplyType
		) c ON r.missReplyNum=c.missReplyType
		LEFT OUTER JOIN (
            SELECT missReplyNum, COUNT(*) replyLikeCount FROM commissReplyLike
            WHERE likeNo=1
            GROUP BY missReplyNum
        ) l ON l.missReplyNum=r.missReplyNum
		WHERE missNum=#{missNum} AND r.missReplyType=0
		ORDER BY r.missReplyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<update id="updateReply" parameterType="com.sp.catdog.community.miss.Reply">
		UPDATE comMissReply SET missReplyContent=#{missReplyContent}
		WHERE missReplyNum=#{missReplyNum} AND userId=#{userId}
	</update>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM comMissReply WHERE missReplyNum=#{missReplyNum}
		<if test="mode=='reply'">
			OR missReplyType=#{missReplyNum}
		</if>
	</delete>
	
	<select id="listAnswerReply" parameterType="Integer" resultType="com.sp.catdog.community.miss.Reply">
		SELECT r.missReplyNum, r.userId, userNick, missNum, missReplyContent, 
			to_char(missReplyCreated, 'YYYY-MM-DD') missReplyCreated, missReplyType, replyLikeCount
		FROM commissReply r
		JOIN member1 m ON m.userId=r.userId
		LEFT OUTER JOIN (
            SELECT missReplyNum, COUNT(*) replyLikeCount FROM commissReplyLike
            WHERE likeNo=1
            GROUP BY missReplyNum
        ) l ON l.missReplyNum=r.missReplyNum
		WHERE missReplyType=#{missReplyType}
		ORDER BY r.missReplyNum ASC
	</select>
	
	<select id="answerReplyCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM comMissReply WHERE missReplyType = #{missReplyType}
	</select>
	
	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO comMissReplyLike(missReplyNum, userId, likeNo) VALUES (#{missReplyNum}, #{userId}, 1)
	</insert>
	
	<select id="replyLikeCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM comMissReplyLike 
		WHERE missReplyNum=#{missReplyNum} AND likeNo=1
	</select>
	
	<delete id="deleteReplyLike" parameterType="map">
		DELETE FROM comMissReplyLike WHERE missReplyNum=#{missReplyNum} AND userId=#{userId}
	</delete>
	
	<select id="replyLikeUser" parameterType="map" resultType="Integer">
		SELECT likeNo FROM comMissReplyLike WHERE missReplyNum=#{missReplyNum} AND userId=#{userId}
	</select>
	
	<insert id="insertPoint" parameterType="com.sp.catdog.community.miss.Miss">
		INSERT INTO comPoint(pointNum, pointContent, pointCreated, pointType, pointQuantity, userId) VALUES 
			(comPoint_seq.NEXTVAL, '찾아주세요 글 작성', SYSDATE, 1, 100, #{userId})
	</insert>
	
	<insert id="insertReplyPoint" parameterType="com.sp.catdog.community.miss.Reply">
		INSERT INTO comPoint(pointNum, pointContent, pointCreated, pointType, pointQuantity, userId) VALUES 
			(comPoint_seq.NEXTVAL, '찾아주세요 댓글 작성', SYSDATE, 1, 10, #{userId})	
	</insert>
</mapper>