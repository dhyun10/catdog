<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardManage">

	<sql id="where-list">
		<choose>
			<when test="condition=='userId' ">
				INSTR(userId, #{keyword}) &gt;= 1
			</when>
			<when test="condition=='created' ">
				( TO_CHAR(created, 'YYYY-MM-DD') = #{keyword}
					OR TO_CHAR(created, 'YYYYMMDD') = #{keyword} )
			</when>
			<otherwise>
				INSTR(#{condition}, #{keyword}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<!-- 게시물 통합관리 -->
	<select id="listArticle" parameterType="map" resultType="com.sp.catdog.admin.boardManage.Board">
		SELECT * FROM
		(
			SELECT boardType, freeNum as num, freeSubject as subject, freeCreated as created, userId FROM comFree
			UNION ALL
			SELECT boardType, dealNum as num, dealSubject as subject, dealCreated as created, userId FROM comDeal
			UNION ALL
			SELECT boardType, vidNum as num, vidSubject as subject, vidCreated as created, userId FROM vetVideo
		)
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="boardType!='' ">
				AND boardType=#{boardType, jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY created DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="articleCount" parameterType="map" resultType="Integer">
		SELECT COUNT(boardType)
		FROM(
			SELECT boardType, freeNum as num, freeSubject as subject, freeCreated as created, userId FROM comFree
			UNION ALL
			SELECT boardType, dealNum as num, dealSubject as subject, dealCreated as created, userId FROM comDeal
			UNION ALL
			SELECT boardType, vidNum as num, vidSubject as subject, vidCreated as created, userId FROM vetVideo
		)
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="boardType!='' ">
				AND boardType=#{boardType, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="listBoardType" resultType="com.sp.catdog.admin.boardManage.Board">
		SELECT DISTINCT(boardType)
		FROM(
			SELECT boardType FROM comFree
			UNION ALL
			SELECT boardType FROM comDeal
			UNION ALL
			SELECT boardType FROM vetVideo
		)
	</select>
	
	<delete id="deleteArticle" parameterType="map">
		DELETE FROM ${tableName} WHERE ${numName}=#{num}
	</delete>
	<!-- 댓글 통합관리 -->
	<select id="listReply" parameterType="map" resultType="com.sp.catdog.admin.boardManage.Board">
		SELECT * FROM(
			SELECT boardType, r.freeNum AS num, freeReplyNum AS replyNum, r.userId, freeReplyCreated AS created, freeReplyContent AS content
			FROM comFreeReply r
			JOIN comFree f ON f.freeNum=r.freeNum
			UNION ALL
			SELECT boardType, r.dealNum AS num, dealReplyNum AS replyNum, r.userId, dealReplyCreated AS created, dealReplyContent AS content
			FROM comDealReply r
			JOIN comDeal d ON d.dealNum=r.dealNum
			UNION ALL
			SELECT boardType, r.vidNum AS num, vidReplyNum AS replyNum, r.userId, vidReplyCreated AS created, vidReplyContent AS content
			FROM vetVidReply r
			JOIN vetVideo v ON v.vidNum=r.vidNum
		)
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="boardType!='' ">
				AND boardType=#{boardType, jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY created DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT COUNT(boardType) 
		FROM(
			SELECT boardType, r.freeNum AS num, freeReplyNum AS replyNum, r.userId, freeReplyCreated AS created, freeReplyContent AS content
			FROM comFreeReply r
			JOIN comFree f ON f.freeNum=r.freeNum
			UNION ALL
			SELECT boardType, r.dealNum AS num, dealReplyNum AS replyNum, r.userId, dealReplyCreated AS created, dealReplyContent AS content
			FROM comDealReply r
			JOIN comDeal d ON d.dealNum=r.dealNum
			UNION ALL
			SELECT boardType, r.vidNum AS num, vidReplyNum AS replyNum, r.userId, vidReplyCreated AS created, vidReplyContent AS content
			FROM vetVidReply r
			JOIN vetVideo v ON v.vidNum=r.vidNum
		)
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="boardType!='' ">
				AND boardType=#{boardType, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
</mapper>